"# тестовые значения
#m = [[9, 5, 3],[0, 7, -1], [-5, 2, 9]]
#f = [[-1,-1,-1],[-1,-1,-1],[-1,-1,-1]]

#m = [[1]]
#f = [[-1]]

# заполнение двумерного массива
m = []
f = []

ii = 0
while True:
	s = [str (i) for i in input().split()]
	###print(""->"" + str(s[len(s)-1]))
	if s[len(s)-1] == ""end"":
		break
	else:
		m.append([])
		f.append([])
		for j in range(0, len(s)):
			m[ii].append(s[j])
			f[ii].append(-1)
	ii += 1	
	
row = ii-1	
col = j
###print(row, ""\t"
col)

'''
# вывод двумерного массива
print (""---------------------"")
for i in range (len (m) ):
	for j in range (len (m[i]) ):
		print (m[i][j], end =""\t"")
	print ()
# вывод двумерного массива
print (""---------------------"")
for i in range (len (m) ):
	for j in range (len (m[i]) ):
		print (f[i][j], end =""\t"")
	print ()	
row = i
col= j
print (""---------------------"")	
print(row, ""\t"
col)

'''
# обработка двумерного массива по заданию
i1=-1
j1=-1
for i in range (len (m) ):
	for j in range (len (m[i]) ):
		i1 = i
		j1 = j
		
		if i == 0: 
			m1 = m[row][j1]
		else:
			m1 = m[i1-1][j1]  # 1е слагаемое 
		###print (""m1="" + str(m1))
		
		if i == row:
			m2 = m[0][j1]
		else:
			m2 = m[i1+1][j1]  # 2е слагаемое
		###print (""m2="" + str(m2))
		
		if j == 0:
			m3 = m[i1][col]
		else:
			m3 = m[i1][j1-1]  # 3е слагаемое
		###print (""m3="" + str(m3))
		
		if j == col:
			m4 = m[i1][0]
		else:
			m4 = m[i1][j1+1]  # 4е слагаемое
		###print (""m4="" + str(m4))
			
		f[i][j] = int(m1) + int(m2) + int(m3) + int(m4)
		###print (str(m1) + ""|"" + str(m2) + ""|"" + str(m3) + ""|"" + str(m4))
	###print()

# вывод двумерного массива
###print (""---------------------"")
for i in range (len (m) ):
	for j in range (len (m[i]) ):
		print (f[i][j], end =""\t"")
	print ()
###print (""---------------------"")
"# Ввод размерности матрицы
n = int(input())
# Создание и заполнение матрицы нулями
m = [[i*0 for i in range(n)] for i in range(n)]
# Обработка матрицы
a = n*n
i = 0
j = -1
r = n
s = 0
while s < a:
	#r 
	k = 1
	while k <= r:
		j += 1
		s += 1
		m[i][j] = s
		k += 1
	d = r - 1
	#d
	k = 1
	while k <= d:
		i += 1
		s += 1
		m[i][j] = s
		k += 1
	l = d 
	#l
	k = 1
	while k <= l:
		j -= 1
		s += 1
		m[i][j] = s
		k += 1
	u = l - 1
	#u
	k = 1
	while k <= u:
		i -= 1
		s += 1
		m[i][j] = s
		k += 1
	r = u
# Вывод матрицы
for i in range (len(m)):
	for j in range (len(m[i])):
		print(m[i][j], end =""\t"")
	print()
"def f(x):
	if x <= -2:
		return(1 - (x + 2)**2)
	elif x > 2:
		return((x-2)**2+1)
	else:
		return(-1.0*x/2) # :)
"def modify_list(l):
	i = 0 
	while i < len(l):
		if l[i] % 2 == 0: # число четное 
			l[i] //= 2
			i += 1
		else: # число нечетное
			l.pop(i)
	return(l)
"print(sum(map(int, input().split()))) #готовый код
"print('Hello, Stepik & Coursera!')
,
print('Hello, World!') # :) 
,
print('Hello, BeeGeek!') # :) 
,
def update_dictionary(d, key, value): 
	if key in d:
		d.setdefault(key, []).append(value)
	elif (2*key in d):
		d.setdefault(2*key, []).append(value)
	else:
		d.setdefault(2*key, []).append(value)
"import collections
c = collections.Counter()
s = input().lower().split(' ')
for word in s:
	c[word] += 1 
d = dict(c)
for key in sorted(d.keys()):
	print(str(key) + ' ' + str(d[key]))
"def ff(x):
	r = ''
	#print('----------------------------------------')
	#print(d)
	#print('----------------------------------------')	
	for key in sorted(d.keys()):
		if str(key) == str(x):
			r = str(d[key])
			#rr = str(r) + ""++"
			break
	if r == '':
		d[x] = f(x)
		r = d[x]
		#rr = str(r) + ""+"
	#return(rr)
	return(r)

d = {}

x = int(input())
for i in range (1,x+1):
	y = int(input())
	print(ff(y))
"def main():
    a, b = map(int, input().split())
    res = a + b
    print(res)


if __name__ == ""__main__"":
    main()
"def fib(n):
	m = []
	m.append([])
	m[0] = 0
	m.append([])
	m[1] = 1	
	i = 2
	f = 0
	while i <= n:
		f = m[i - 1] + m[i - 2]
		m.append([])
		m[i] = f
		i += 1
	if n == 1:
		f = 1
	return(f)
def main():
    n = int(input())
    print(fib(n))

if __name__ == ""__main__"":
    main()

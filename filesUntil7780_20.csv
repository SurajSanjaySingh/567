"import copy
field = [['.', '#', '.', '.', '.', '.', '.', '.', '.', '.'],
 ['.', '.', '#', '.', '.', '.', '.', '.', '.', '.'],
 ['#', '#', '#', '.', '.', '.', '.', '.', '.', '.'],
 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],
 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],
 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],
 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],
 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],
 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.'],
 ['.', '.', '.', '.', '.', '.', '.', '.', '.', '.']]
#new = field.copy()
new=copy.deepcopy(field)
k = int(input())
for z in range(k):
    for m in range(0,10):
        for n in range(0,10):
            l = []
            for i in range(-1,2):
                for j in range(-1,2):
                    if i == 0 and j == 0: continue
                    try:
                        l.append(field[m+j][n+i])
                    except:
                        continue
            if field[m][n] == '.':
                if l.count('#') == 3:
                    new[m][n] = '#'
            if field[m][n] == '#':
                if l.count('#')<2 or l.count('#')>3:
                    new[m][n] = '.'
    field = copy.deepcopy(new)
for i in new:
    print(i)
"k = int(input())
for i in range(k-1):
    print(' '*(k-i-2),'#'*(i*2+1),' '*(k-i-2))
print('#'*((i+1)*2+1))
"a=input()
try: print(int(a)*2)
except: print(str(a)*2)
"a = input().split('_')
b = []
for i in range(1,len(a)):
    a[i] = a[i][0].upper()+a[i][1:]
for i in a:
    print(i,end='')
"a = input()
b = []
c=0
while a!='.':
    if a.split(' ')[1] == 'true':
        b.append(a.split(' ')[0])
        c+=1
    a = input()
print(' '.join(b))
print(c)
"a = input()
c = []
while a != '.':
    c.append(a)
    a = input()
    if a =='.':
        s=float(input())
for i in c:
    if i.split(' ')[0] == '+':
        s+=float(i.split(' ')[1])
    elif i.split(' ')[0] == '-':
        s-=float(i.split(' ')[1])
    elif i.split(' ')[0] == '*':
        s*=float(i.split(' ')[1])
    elif i.split(' ')[0] == '/':
        s/=float(i.split(' ')[1])
print(s)
"a = input().split()
x = 0
y = 0
s = 1
for i in a:
    if i == 'l':
        x -= 1
    elif i == 'r':
        x += 1
    elif i == 'u':
        y += 1
    elif i == 'd':
        y -= 1
    elif i == '*':
        s += 1
    elif i == '#':
        s -= 1
    if s == 0:
        break
print(x, y)
print(s)
"def func(l):
    m = []
    for i in l:
        if i in m:
            continue
        m.append(i)
    return m
,
def call(f, *args, **kwargs):
    if len(args)>0 and len(kwargs)>0:
        return f(*args, **kwargs)
    if len(args)>0 and len(kwargs)==0:
        return f(*args)
    if len(args)==0 and len(kwargs)>0:
        return f(**kwargs)
    if len(args)==0 and len(kwargs)==0:
        return f()
"def first(*aa,**bb):
    if len(aa)>0:
        return aa[0]
    if len(bb) == 1:
        return bb
    if len(aa) == 0 and len(bb) > 0:
        return bb[min(bb.keys())]
    if len(aa) == 0 and len(bb) == 0:
        return None
"def vector_sum(v1, v2):
    s = []
    for i in range(len(v1)):
        m = v1[i]+v2[i]
        s.append(m)
    return tuple(s)
"def character_count(s):
    keys, values = [], []
    for i in s:
        if i not in keys:
            keys.append(i)
            values.append(s.count(i))
    d = dict((keys[i], values[i]) for i in range(len(keys)))
    return d
"def calc(a, op, b):
    d = {'+': add, '-': sub, '/': div, '*': mul}
    return d.get(op)(a,b)
,
def average_attempts(attempts, names):
    d = {}
    for i in attempts:
        if i[0] not in d:
            d[i[0]] = [1,i[2]]
        elif i[0] in d:
            d[i[0]][0] += 1
            d[i[0]][1] += i[2]  
    for i in names:
        if i[0] in d:
            d[i[1]] = d[i[0]]
            d.pop(i[0])
    for i in d:
        d[i] = float(d[i][1])/float(d[i][0])
    return d
"def max_par(a, b, c):
    if a < 0: return -b/(2*a), a*(-b/(2*a))**2 + b*(-b/(2*a)) + c
    else: return None
"def code_number(num):
    d = {'0': 'zero', '1': ""one"
'2': ""two"
'3': ""three"

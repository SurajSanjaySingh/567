"str_in = input()
frame = f'x{""-"" * (len(str_in) * 5 - 1)}x'
numbers = [
    [1, 2, 2, 0, 2, 2, 1],
    [0, 4, 4, 0, 4, 4, 0],
    [1, 4, 4, 1, 3, 3, 1],
    [1, 4, 4, 1, 4, 4, 1],
    [0, 2, 2, 1, 4, 4, 0],
    [1, 3, 3, 1, 4, 4, 1],
    [1, 3, 3, 1, 2, 2, 1],
    [1, 4, 4, 0, 4, 4, 0],
    [1, 2, 2, 1, 2, 2, 1],
    [1, 2, 2, 1, 4, 4, 1]
]

patterns = [
    '    ',
    ' -- ',
    '|  |',
    '|   ',
    '   |'
]


print(frame)
for i in range(7):
    s_out = ''
    for k in str_in:
        s_out += patterns[numbers[int(k)][i]] + ' '
    print(f'|{s_out[:-1]}|')
print(frame)
"def get_int(start_message, error_message, end_message):
    num = input(f'{start_message}\n')
    try:
        num = int(num)
        print(end_message)
    except:
        num = get_int(error_message, error_message, end_message)
    return num
,
sin, s = input(), input()
print(' '.join(str(i) for i in range(len(sin)) if sin.startswith(s, i)) or -1)
"s = [int(i) for i in input().split()]
x = sorted(set(abs(s[i - 1] - s[i]) for i in range(1, len(s))))
print('Jolly' if x == [i for i in range(1, len(s))] or len(s) ==1 else 'Not jolly')
"dict = (('IV', 4), ('IX', 9), ('XL', 40), ('XC', 90), ('CD', 400), ('CM', 900), ('I', 1), ('V', 5), ('X', 10), ('L', 50), ('C', 100), ('D', 500), ('M', 1000))

s, n = input(), 0

for i in dict:
    if s.find(i[0])>=0:
        n += i[1] * s.count(i[0])
        s = s.replace(i[0], '')

print(n)
"def number(n, size):
    num = [' ' for x in range(2 * size + 5)]
    for i in range(len(num)):
        if i == 0 or i == len(num)-1:
            num[i] = '-'*(size + 2)
        else:
            if (i in(1, 2+size, 3+size*2) and n in (2,3,5,6,8,9)) or (n==4 and i==2+size) or (n==7 and i==1) or (n==0 and i in (1, 3+size*2)):
                num[i] = ' '+'-'*size+' '
            elif (n in (0, 4, 8, 9) and 1<i<=(1+size)) or (n in (0,6,8) and (size+2)<i<=(size*2+2)):
                num[i] = '|' + ' ' * size + '|'
            elif (n in (1, 2, 3, 7) and 1<i<=(1+size)) or (n in (1, 3, 4, 5, 7, 9) and (size+2)<i<=(size*2+2)):
                num[i] = ' ' * (size+1) + '|'
            elif (n in (5,6) and 1<i<=(1+size)) or (n == 2 and (size+2)<i<=(size*2+2)):
                num[i] = '|' + ' ' * (size+1)
            else:
                num[i] = ' '*(size+2)
    return num

s, size = input(), 2

for i in range(2 * size + 5):
    row = [number(int(x), size)[i] for x in s]
    if i==0 or 2 * size + 5 - i == 1:
        print('x'+'-'.join(row)+'x')
    else:
        print('|'+' '.join(row)+'|')
"s = [len(x) for x in input().split()]
for x in sorted({(i, s.count(i)) for i in s}):
    print('{}: {}'.format(x[0], x[1]))
"print(""""""{0} and {1} sat in the tree.
{0} had fallen, {1} was stolen.
What's remaining in the tree?
""""".format(input(), input()))
"alpha = ' abcdefghijklmnopqrstuvwxyz'
n, s = int(input()), input().strip()
print('Result: ""{}""'.format(''.join(alpha[(alpha.index(c) + n) % len(alpha)] for c in s)))
,
try:
    s = list(map(int, input().split('.')))
    print('YES' if len([x for x in s if 0<=x<=255]) == 4 else 'NO')
except ValueError:
    print('NO')
"n, k = map(int, input().split())

pins = ['I' for i in range(n)]

for i in range(k):
    l, r = map(int, input().split())
    pins[l - 1:r] = ['.' for i in pins[l - 1:r]]

print(''.join(pins))
"synonyms  = [input() for _ in range(int(input()))]
word = input()

for pair in synonyms:
    if word in pair:
        print(pair.replace(word, '').strip())
        break
"n = int(input())
print(n//100+n%100//10+n%10)
"# Posted from PyCharm Edu
# put your python code here
s = sorted(map(int, input().split()))

for i in range(1, len(s)-1):
    if s[i] - s[i-1] != s[i+1] - s[i]:
        print('No')
        break
else:
    print('Yes')
"def f(x):
    return x * f(x-2) if x > 0 else 1
"# put your python code here
import re, sys
data = sys.stdin.read().splitlines()

[print(x) for x in data if re.search(r'\bcat\b', x)]
"# Posted from PyCharm Edu
# put your python code here
n = int(input())
time = sorted([[int(x) for x in input().split()] for i in range(n)])
[print(*x) for x in time]
